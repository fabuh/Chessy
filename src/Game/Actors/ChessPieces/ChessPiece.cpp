#include "pch.h"
#include "ChessPiece.h"

namespace chessy
{
	//////////////////////////////////////////////////////////////////////////////////////////
	ChessPiece::ChessPiece(EColor color, EChessPieceType type) :
		m_type(type),
		m_color(color),
		m_hasMoved(false)
	{
	}

	//////////////////////////////////////////////////////////////////////////////////////////
	ChessPiece::ChessPiece(ChessPiece&& other) noexcept : m_color(other.m_color), m_type(other.m_type), m_hasMoved(other.m_hasMoved)
	{
		m_chessMoves = std::move(other.m_chessMoves);
	}

	//////////////////////////////////////////////////////////////////////////////////////////
	void ChessPiece::SetHasMoved(bool hasMoved)
	{
		m_hasMoved = hasMoved;
	}

	//////////////////////////////////////////////////////////////////////////////////////////
	bool ChessPiece::HasMoved() const
	{
		return m_hasMoved;
	}

	//////////////////////////////////////////////////////////////////////////////////////////
	const ChessPieceMoves& ChessPiece::GetChessPieceMoves() const
	{
		return m_chessMoves;
	}

	//////////////////////////////////////////////////////////////////////////////////////////
	EChessPieceType ChessPiece::GetType() const
	{
		return m_type;
	}

	//////////////////////////////////////////////////////////////////////////////////////////
	EColor ChessPiece::GetColor() const
	{
		return m_color;
	}
}